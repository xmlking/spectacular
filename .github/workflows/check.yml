name: Check

on:
  push:
    # This should disable running the workflow on tags, according to the
    # on.<push|pull_request>.<branches|tags> GitHub Actions docs.
    # branches: ['*']
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'docs'
      - 'infra'
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  cog_check:
    name: check conventional commit compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Conventional commits check
        uses: cocogitto/cocogitto-action@v3.7
        with:
          check-latest-tag-only: true
  #   linter:
  #     name: Lint Code Base
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout Code
  #         uses: actions/checkout@v4
  #         with:
  #           # Full git history is needed to get a proper list of changed files within `super-linter`
  #           fetch-depth: 0
  #       - name: Lint Code Base
  #         uses: github/super-linter@v5
  #         env:
  #           VALIDATE_ALL_CODEBASE: false
  #           IGNORE_GENERATED_FILES: true
  #           # FILTER_REGEX_EXCLUDE: CHANGELOG.md
  #           DEFAULT_BRANCH: main
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm run build --filter=docs
      - run: pnpm run test:unit:coverage --filter=docs
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 2
#       - uses: oven-sh/setup-bun@v1
#         with:
#           bun-version: latest
#       - name: Install Dependencies
#         run: bun  install
#       #   - run: bun run check --filter=docs
#       #   - run: bun run lint --filter=docs
#       - run: bun run build --filter=docs
#       - run: bun run test:unit:coverage --filter=docs
