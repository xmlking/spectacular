# https://github.com/joshnuss/testing-with-sveltekit/blob/master/.github/workflows/ci.yml
# https://davetayls.me/blog/2023-06-12-deploying-a-monorepo-to-vercel-with-github-actions
name: CI

on:
  push:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/db

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v3

      - name: Install dependencies
        run: bun install

      - name: Setup database
        run: bun prisma db push

      - name: Run tests
        run: bun test run

      - name: Lint
        run: bun lint

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v3

      - name: Install dependencies
        run: bun install

      - name: Install Vercel CLI
        run: bun add -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Migrate database
        run: bun prisma db push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
