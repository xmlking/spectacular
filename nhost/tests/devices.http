###
@graphqlEndpoint =  {{$dotenv NHOST_GRAPHQL_URL}}
@graphqlAdminToken = {{$dotenv HASURA_GRAPHQL_ADMIN_SECRET}}
# set token without `''`
@graphqlUserToken =
###

### IntrospectionQuery
# @name IntrospectionQuery
POST  {{graphqlEndpoint}}
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
X-REQUEST-TYPE: GraphQL

query IntrospectionQuery {
	__schema {
		types {
			name
			description
		}
		directives {
			name
			description
			locations
		}
	}
}

### List Active Devices
# @name listDevices
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
Authorization: Bearer {{graphqlUserToken}}
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

query ListDevices($limit: Int = 50, $offset: Int = 0, $order_by: [devices_order_by!] = [{updatedAt: desc_nulls_last}]) {
  devices(limit: $limit, offset: $offset, order_by: $order_by) {
    ip
    tags
    createdBy
    description
    displayName
    orgId
    updatedBy
    createdAt
    updatedAt
    metadata
    id
  }
}

{
  "limit": 5,
  "offset": 0
}

### Search Active Devices
# @name searchDevices
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

query SearchDevices($where: devices_bool_exp, $limit: Int = 50, $offset: Int = 0, $orderBy: [devices_order_by!] = [{updatedAt: desc_nulls_last}]) {
  devices(order_by: $orderBy, limit: $limit, offset: $offset, where: $where) {
    ip
    tags
    createdBy
    description
    displayName
    orgId
    updatedBy
    createdAt
    updatedAt
    metadata
    id
  }
}

{
  "where": {
    "displayName": { "_like": "%test%" }
  },
  "limit": 10
}

###
@firstDeviceId =  {{listDevices.response.body.$.data.devices[0].id}}
###

### getDevice by Id
# @name getDevice
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

query GetDevice($id: uuid!) {
  devices_by_pk(id: $id) {
    id
	ip
    displayName
    description
    orgId
    tags
    metadata
    createdAt
    createdBy
    updatedAt
    updatedBy
  }
}

{
  "id": "{{firstDeviceId}}"
}

### update device by ID
# organization = x-hasura-default-org 	updated_by = x-hasura-user-id
# @name updateDevice
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

mutation UpdateDevice($id: uuid!, $data: devices_set_input!) {
  update_devices_by_pk(pk_columns: { id: $id }, _set: $data) {
    id
	displayName
	description
    updatedAt
  }
}

{
  "id":"{{firstDeviceId}}",
  "data":{
    "description":"user 1 device v3",
    "tags":["tz","us"],
    "metadata": {"sumo": "demo3"}
  }
}

### UPSERT: create new device if displayName not already exist, otherwise update
# organization = x-hasura-default-org 	created_by = x-hasura-user-id
# @name createDevice
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

mutation CreateDevice($data: devices_insert_input!) {
  insert_devices_one(object: $data, on_conflict: {update_columns: [ip, description, tags, metadata], constraint: devices_display_name_organization_key}) {
    metadata
    ip
    id
    displayName
    tags
    orgId
    description
    createdAt
    createdBy
    updatedAt
    updatedBy
  }
}


{
  "data":{
    "metadata": {"sumo": "demo3"},
    "displayName": "test-ddd",
    "ip": "1.1.1.2"
  }
}

###
@createdDeviceId =  {{createDevice.response.body.$.data.insert_devices_one.id}}
###

### Delete Device
# if null returned, either ID is not found or this user don't have permissions to delete
# @name deleteDevice
POST  {{graphqlEndpoint}}
X-REQUEST-TYPE: GraphQL
Content-Type: application/json
x-hasura-admin-secret: {{graphqlAdminToken}}
x-hasura-allowed-roles: user me org:admin
x-hasura-default-role: org:admin
x-hasura-role: org:admin
x-hasura-allowed-orgs: {'8dfd9a31-de01-47be-92a7-ba1c720c6270', 'd5dbb6b6-5e43-4dca-b855-be9b65b6695b'}
x-hasura-default-org: chinthagunta
x-hasura-user-id: 572ad1c0-f97b-4e16-b1f6-8b5ca90f931f

mutation DeleteDevice($id: uuid!) {
	delete_devices_by_pk( id: $id) {
		displayName
	}
}

{
  "id": "{{createdDeviceId}}"
}
