[global]

[hasura]
version = 'v2.44.0-ce'
adminSecret = '{{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}'
webhookSecret = '{{ secrets.NHOST_WEBHOOK_SECRET }}'

[[hasura.jwtSecrets]]
type = 'HS256'
key = '{{ secrets.HASURA_GRAPHQL_JWT_SECRET }}'

# [[hasura.jwtSecrets.claims_map]]
# claim = "x-hasura-allowed-roles"
# path = "$.https://hasura.io/jwt/claims.tenant-roles"
# default = ["user", "editor"]

[hasura.settings]
corsDomain = ['*']
devMode = true
enableAllowList = false # enable it for prod
enableConsole = true
enableRemoteSchemaPermissions = true
enabledAPIs = ['metadata', 'graphql', 'pgdump', 'config']
inferFunctionPermissions = true
liveQueriesMultiplexedRefetchInterval = 1000
stringifyNumericTypes = false

[hasura.logs]
level = 'warn'

[hasura.events]
httpPoolSize = 10

[hasura.rateLimit]
limit = 100
interval = '1m'

[graphql]
[graphql.security]
forbidAminSecret = false # enable it in prod
maxDepthQueries = 4

[functions]
[functions.node]
version = 20

[functions.rateLimit]
limit = 100
interval = '15m'

[auth]
version = '0.37.1'

[auth.elevatedPrivileges]
mode = 'recommended'

[auth.redirections]
clientUrl = 'https://console.traefik.me:5173'
allowedUrls = ['https://console.traefik.me:5173', 'https://console.traefik.me:5173/profile', 'https://console.traefik.me:4173', 'https://console.traefik.me:4173/profile', 'https://console.traefik.me:3000', 'https://console.traefik.me:3000/profile', 'https://console.traefik.me', 'https://console.traefik.me/profile', 'https://*.vercel.app']

[auth.signUp]
enabled = true
disableNewUsers = false

[auth.signUp.turnstile]
secretKey = '{{ secrets.CLOUDFLARE_TURNSTILE_SECRET_KEY }}'

[auth.user]
[auth.user.roles]
default = 'user'
allowed = ['user', 'me']

[auth.user.locale]
default = 'en'
allowed = ['en', 'de', 'es']

[auth.user.gravatar]
enabled = true
default = 'mp'
rating = 'g'

[auth.user.email]

[auth.user.emailDomains]

[auth.session]
[auth.session.accessToken]
expiresIn = 900 # for prod, set 3600

[[auth.session.accessToken.customClaims]]
key = 'default-org'
value = 'defaultOrg'

[[auth.session.accessToken.customClaims]]
key = 'allowed-orgs'
value = 'allowedOrgs.orgId[]'

[[auth.session.accessToken.customClaims]]
key = 'user-email'
value = 'email'

[auth.session.refreshToken]
expiresIn = 2629800 # set lower in prod

[auth.method]
[auth.method.anonymous]
enabled = false

[auth.method.emailPasswordless]
enabled = true

[auth.method.otp]
[auth.method.otp.email]
enabled = true

[auth.method.emailPassword]
hibpEnabled = false # enable in prod
emailVerificationRequired = false # enable in prod
passwordMinLength = 9 # 12 in prod

[auth.method.smsPasswordless]
enabled = false

[auth.method.oauth]
[auth.method.oauth.apple]
enabled = false

[auth.method.oauth.azuread]
tenant = '{{ secrets.AUTH_PROVIDER_AZUREAD_TENANT }}'
enabled = true
clientId = '{{ secrets.AUTH_PROVIDER_AZUREAD_CLIENT_ID }}'
clientSecret = '{{ secrets.AUTH_PROVIDER_AZUREAD_CLIENT_SECRET }}'

[auth.method.oauth.bitbucket]
enabled = false

[auth.method.oauth.discord]
enabled = false

[auth.method.oauth.facebook]
enabled = false

[auth.method.oauth.github]
enabled = true
# audience = 'audience'
clientId = '{{ secrets.AUTH_PROVIDER_GITHUB_CLIENT_ID }}'
scope = ['openid', 'email', 'profile']
clientSecret = '{{ secrets.AUTH_PROVIDER_GITHUB_CLIENT_SECRET }}'

[auth.method.oauth.gitlab]
enabled = false

[auth.method.oauth.google]
enabled = true
# audience = 'audience'
clientId = '{{ secrets.AUTH_PROVIDER_GOOGLE_CLIENT_ID }}'
scope = ['openid', 'email', 'profile']
clientSecret = '{{ secrets.AUTH_PROVIDER_GOOGLE_CLIENT_SECRET }}'

[auth.method.oauth.linkedin]
enabled = false

[auth.method.oauth.spotify]
enabled = false

[auth.method.oauth.strava]
enabled = false

[auth.method.oauth.twitch]
enabled = false

[auth.method.oauth.twitter]
enabled = false

[auth.method.oauth.windowslive]
enabled = false

[auth.method.oauth.workos]
enabled = false

[auth.method.webauthn]
enabled = true

[auth.method.webauthn.relyingParty]
name = 'Spectacular Console App'
origins = ['https://console.traefik.me:5173']

[auth.method.webauthn.attestation]
timeout = 60000

[auth.totp]
enabled = false

[auth.misc]
concealErrors = false

[auth.rateLimit]
[auth.rateLimit.emails]
limit = 10
interval = '1h'

[auth.rateLimit.sms]
limit = 10
interval = '1h'

[auth.rateLimit.bruteForce]
limit = 10
interval = '5m'

[auth.rateLimit.signups]
limit = 10
interval = '5m'

[auth.rateLimit.global]
limit = 100
interval = '15m'

[postgres]
version = '17.2-20250131-1'

[postgres.resources]
enablePublicAccess = true

[postgres.resources.storage]
capacity = 10

[postgres.settings]
maxConnections = 100
walLevel = 'logical'
maxWalSenders = 10
maxReplicationSlots = 10

[provider]
[provider.smtp]
user = '{{ secrets.AUTH_SMTP_USER }}'
password = '{{ secrets.AUTH_SMTP_PASS }}'
sender = '{{ secrets.AUTH_SMTP_SENDER }}'
host = '{{ secrets.AUTH_SMTP_HOST }}'
port = 1025
secure = false
method = 'PLAIN'

# [provider.sms]
# provider = 'twilio'
# accountSid = 'twilioAccountSid'
# authToken = 'twilioAuthToken'
# messagingServiceId = 'twilioMessagingServiceId'

[storage]
version = '0.7.0'

# [storage.antivirus]
# server = 'tcp://run-clamav:3310'

[storage.rateLimit]
limit = 100
interval = '15m'

[ai]
version = '0.7.1'
webhookSecret = '{{ secrets.GRAPHITE_WEBHOOK_SECRET }}'

[ai.resources]
[ai.resources.compute]
cpu = 256
memory = 512

[ai.openai]
organization = '{{ secrets.OPENAI_ORG_ID }}'
apiKey = '{{ secrets.OPENAI_API_KEY }}'

[ai.autoEmbeddings]
synchPeriodMinutes = 10

[observability]
[observability.grafana]
adminPassword = '{{ secrets.GRAFANA_ADMIN_PASSWORD }}'

[observability.grafana.alerting]
enabled = true

[observability.grafana.contacts]
