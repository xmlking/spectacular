apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres:16
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: env-vars
            - configMapRef:
                name: env-vars-common
            # - secretRef:
            #     name: secrets
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: POSTGRES_PASSWORD
          ports:
            - name: tcp-pg
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
            initialDelaySeconds: 3
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
            initialDelaySeconds: 3
            timeoutSeconds: 2
          # resources:
          #   limits:
          #     memory: '512Mi'
          #     cpu: '1'
          #   requests:
          #     memory: '256Mi'
          #     cpu: '100m'
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data-claim
      volumes:
        - name: postgres-data-claim
          persistentVolumeClaim:
            claimName: postgres-data-claim
